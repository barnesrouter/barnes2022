{"version":3,"sources":["webpack:///./content/assets/Barnes-White-Web-sm.png","webpack:///./src/templates/blog-post.js"],"names":["module","exports","BlogPostTemplate","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","frontmatter","description","excerpt","className","fluid","events","childImageSharp","alt","y","src","logo1","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel"],"mappings":"+EAAAA,EAAOC,QAAU,IAA0B,mE,kCCA3C,0HA6FeC,UAlFU,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAElB,OACE,kBAAC,IAAD,CAAQR,SAAUA,EAAUM,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAOL,EAAKQ,YAAYH,MACxBI,YAAaT,EAAKQ,YAAYC,aAAeT,EAAKU,UAEpD,yBAAKC,UAAU,UAEb,kBAAC,IAAD,CACEC,MAAOd,EAAKe,OAAOC,gBAAgBF,MACnCG,IAAI,OACJJ,UAAU,gBAEZ,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,4BAEf,kBAAC,WAAD,CAAUA,UAAU,eAAeK,EAAG,EAAE,GAAI,KAC1C,6BACE,yBAAKC,IAAKC,IAAOH,IAAI,4BAA4BJ,UAAU,cAC3D,wBAAIA,UAAU,aAAY,yCAA1B,aAMR,0BAAMA,UAAU,yBACZ,yBAAKA,UAAU,kBAEjB,6BACEA,UAAU,YACVQ,WAAS,EACTC,SAAS,6BAET,gCACE,wBAAIT,UAAU,uBAAuBU,SAAS,YAAYrB,EAAKQ,YAAYH,OAC3E,2BAAIL,EAAKQ,YAAYc,OAEvB,6BACEC,wBAAyB,CAAEC,OAAQxB,EAAKyB,MACxCJ,SAAS,cACTV,UAAU,cAKd,yBAAKA,UAAU,iBACb,wBACEe,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGzB,GACC,kBAAC,OAAD,CAAM0B,GAAI1B,EAAS2B,OAAOC,KAAMC,IAAI,QAApC,KACK7B,EAASE,YAAYH,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAMyB,GAAIzB,EAAK0B,OAAOC,KAAMC,IAAI,QAC7B5B,EAAKC,YAAYH,MADpB","file":"component---src-templates-blog-post-js-6436176e893833c2371c.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/Barnes-White-Web-sm-a3526b764b6af874926fa852df014e4b.png\";","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport Img from \"gatsby-image\"\nimport { Parallax } from 'react-scroll-parallax';\n\nimport logo1 from \"../../content/assets/Barnes-White-Web-sm.png\";\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <div className=\"banner\">\n        \n        <Img \n          fluid={data.events.childImageSharp.fluid}\n          alt=\"Test\" \n          className=\"bannerImage\"\n        />\n        <div className=\"overlay-test\"></div>\n        <div className=\"video-contain__gradient\"></div>\n\n        <Parallax className=\"page-overlay\" y={[-10, 10]} >\n          <div>\n            <img src={logo1} alt=\"Barnes Garden Center Logo\" className=\"heroImage\" />\n            <h1 className=\"no-margin\"><span>Barnes </span>Events</h1>\n          </div>        \n        </Parallax>\n\n    </div>\n\n    <main className=\"over-banner inside-lg\">\n        <div className=\"inside-content\">\n\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h2 className=\"no-margin blog-title\" itemProp=\"headline\">{post.frontmatter.title}</h2>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n          className=\"clearfix\"\n        />\n\n        \n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n      </div>\n      </main>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    events: file(relativePath: {eq: \"Barnes-Events.jpg\"}) {\n      childImageSharp {\n        fluid {\n          aspectRatio\n          base64\n          sizes\n          src\n          srcSet\n        }\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}